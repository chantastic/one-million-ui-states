// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Example/Page LogInThenLogOut play-test 1`] = `
{
  "checked": undefined,
  "children": [
    {
      "checked": undefined,
      "children": undefined,
      "level": 1,
      "name": "Acme",
      "pressed": undefined,
      "role": "heading",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Log in",
      "pressed": undefined,
      "role": "button",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "focused": true,
      "name": "Sign up",
      "pressed": undefined,
      "role": "button",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "level": 2,
      "name": "Pages in Storybook",
      "pressed": undefined,
      "role": "heading",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "We recommend building UIs with a",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " ",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "component-driven",
      "pressed": undefined,
      "role": "link",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " ",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "process starting with atomic components and ending with pages.",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Assemble data in the page component from your services. You can mock these services out using Storybook.",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Tip",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " Adjust the width of the canvas with the",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Viewports addon in the toolbar",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
  ],
  "name": "example-page--log-in-then-log-out",
  "pressed": undefined,
  "role": "WebArea",
  "value": undefined,
}
`;

exports[`Example/Page LoggedIn play-test 1`] = `
{
  "checked": undefined,
  "children": [
    {
      "checked": undefined,
      "children": undefined,
      "level": 1,
      "name": "Acme",
      "pressed": undefined,
      "role": "heading",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Welcome, ",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Jane Doe",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "!",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Log out",
      "pressed": undefined,
      "role": "button",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "level": 2,
      "name": "Pages in Storybook",
      "pressed": undefined,
      "role": "heading",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "We recommend building UIs with a",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " ",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "component-driven",
      "pressed": undefined,
      "role": "link",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " ",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "process starting with atomic components and ending with pages.",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Assemble data in the page component from your services. You can mock these services out using Storybook.",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Tip",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " Adjust the width of the canvas with the",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Viewports addon in the toolbar",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
  ],
  "name": "example-page--logged-in",
  "pressed": undefined,
  "role": "WebArea",
  "value": undefined,
}
`;

exports[`Example/Page LoggedOut smoke-test 1`] = `
{
  "checked": undefined,
  "children": [
    {
      "checked": undefined,
      "children": undefined,
      "level": 1,
      "name": "Acme",
      "pressed": undefined,
      "role": "heading",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Log in",
      "pressed": undefined,
      "role": "button",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Sign up",
      "pressed": undefined,
      "role": "button",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "level": 2,
      "name": "Pages in Storybook",
      "pressed": undefined,
      "role": "heading",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "We recommend building UIs with a",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " ",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "component-driven",
      "pressed": undefined,
      "role": "link",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " ",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "process starting with atomic components and ending with pages.",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Assemble data in the page component from your services. You can mock these services out using Storybook.",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Tip",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": " Adjust the width of the canvas with the",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
    {
      "checked": undefined,
      "children": undefined,
      "name": "Viewports addon in the toolbar",
      "pressed": undefined,
      "role": "text",
      "value": undefined,
    },
  ],
  "name": "example-page--logged-out",
  "pressed": undefined,
  "role": "WebArea",
  "value": undefined,
}
`;
